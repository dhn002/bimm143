---
title: "Class 13: Pathway Analysis from RNA-Seq Results"
author: "Duc Nguyen"
format: pdf
---

# Section 1. Differential Expression Analysis

## Import metadata and take a look

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names = 1)
head(colData)
```

## Import countdata and take a look

```{r}
countData <- read.csv("GSE37704_featurecounts.csv", row.names=1)
head(countData)
```

> **Q. Complete the code below to remove the troublesome first column from countData**

```{r}
countData <- as.matrix(countData[,-1])
head(countData)
```

> **Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).**

```{r}
# Filter count data where you have 0 read count across all samples.
countData <- countData[rowSums(countData) > 0,]
head(countData)
```

Check to see if the samples in countData match to colData

```{r}
all(colnames(countData) == rownames(colData))
```

## Running DESeq2

```{r, message=FALSE}
library(DESeq2)
```

```{r, warning=FALSE}
dds <- DESeqDataSetFromMatrix(countData = countData, 
                              colData = colData, 
                              design = ~condition)
dds <- DESeq(dds)
```

```{r}
dds
```

```{r}
res <- results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
head(res)
```

> **Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.**

```{r}
summary(res)
```

## Volcano plot

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

> **Q. Improve this plot by completing the below code, which adds color and axis labels**

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res))

# Color red the genes with absolute fold change above 2
mycols[abs(res$log2FoldChange) > 2] <- "red"

# Color blue those with adjusted p-value less than 0.01 
# And absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2)
mycols[inds] <- "blue"

plot(res$log2FoldChange, -log(res$padj), col=mycols, 
     xlab = "Log2(FoldChange)", ylab = "-Log(P-value)")

# Cut-off lines
abline(v = c(-2,2), col = "black", lty = 2)
abline(h = -log(0.01), col = "black", lty = 2)
```

## Adding gene annotation

> **Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.**

```{r, message=FALSE}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys = row.names(res), 
                    keytype = "ENSEMBL",
                    column = "SYMBOL",
                    multiVals = "first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys = row.names(res),
                    keytype = "ENSEMBL",
                    column = "ENTREZID",
                    multiVals = "first")

res$name = mapIds(org.Hs.eg.db,
                    keys = row.names(res),
                    keytype = "ENSEMBL",
                    column = "GENENAME",
                    multiVals = "first")

head(res, 10)
```

> **Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.**

```{r}
res <- res[order(res$pvalue),]
write.csv(res, file = "deseq_results.csv")
```

# Section 2. Pathway Analysis

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

The 'gage()' function wants only a vector of importance input that has names in ENTREZ ID format

```{r}
foldchanges <- res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Let’s run the gage pathway analysis

```{r}
# Get the results
keggres = gage(foldchanges, gsets = kegg.sets.hs)
```

Look at the object returned from 'gage()' function.

```{r}
attributes(keggres)
```

Let's look at the first few down (less) pathway results:

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

**Look at hsa04110 Cell cycle**

```{r, message=FALSE}
library(pathview)
```

```{r, message=FALSE}
pathview(gene.data = foldchanges, pathway.id = "hsa04110")
```

![The Cell cycle pathway with genes are colored](hsa04110.pathview.png)

**Look at hsa03030 DNA replication**

```{r, message=FALSE}
pathview(gene.data = foldchanges, pathway.id = "hsa03030")
```

![The DNA replication pathway with genes are colored](hsa03030.pathview.png)

## Now, focus on top 5 upregulated pathways

```{r}
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids <- substr(keggrespathways, start = 1, stop = 8)
keggresids
```

## Draw plots for all the top 5 pathways

```{r, message=FALSE}
pathview(gene.data = foldchanges, pathway.id = keggresids, species = "hsa")
```

![hsa04640](hsa04640.pathview.png)

![hsa04630](hsa04630.pathview.png)

![hsa00140](hsa00140.pathview.png)

![hsa04142](hsa04142.pathview.png)

![hsa04330](hsa04330.pathview.png)

>**Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?**

```{r}
keggrespathways_down <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids_down <- substr(keggrespathways_down, start = 1, stop = 8)
keggresids_down
```

```{r, message=FALSE}
pathview(gene.data = foldchanges, pathway.id = keggresids_down, species = "hsa")
```

![hsa04110](hsa04110.pathview.png)

![hsa03030](hsa03030.pathview.png)

![hsa03013](hsa03013.pathview.png)

![hsa03440](hsa03440.pathview.png)

![hsa04114](hsa04114.pathview.png)

# Section 3. Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets <- go.sets.hs[go.subs.hs$BP]

gobpres <- gage(foldchanges, gsets = gobpsets, same.dir = TRUE)

lapply(gobpres, head)
```

# Section 4. Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file = "significant_genes.txt", 
            row.names = FALSE, col.names = FALSE, quote = FALSE)
```

> **Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?**

>**Ans: The pathway has the most significant “Entities p-value” is the "Endosomal/Vacuolar pathway." No, the most significant pathways listed does not match your previous KEGG results. In my opinion, factors that could cause differences between the two methods are due to their differences in the collection of biological information data**

# Section 5. GO online (OPTIONAL)

> **Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?**

> **Ans: The pathway has the most significant “Entities p-value” is the "detection of chemical stimulus involved in sensory perception." No, the most significant pathways listed does not match your previous KEGG results. In my opinion, factors that could cause differences between the two methods are due to their differences in the collection of biological information data**
